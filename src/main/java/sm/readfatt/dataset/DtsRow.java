// Generated by delombok at Mon Jun 13 17:57:30 CEST 2022
package sm.readfatt.dataset;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

public class DtsRow {
  private static final Logger s_log  = LogManager.getLogger(DtsRow.class);
  public static String        s_next = ", ";
  private Dataset             dataset;
  private DtsData[]           dati;

  public DtsRow(Dataset pdts) {
    setDataset(pdts);
    init();
  }

  private void init() {
    dati = new DtsData[dataset.getColonne().size()];
  }

  public boolean isLibero(DtsData pdata) {
    if (dati == null)
      return true;
    int ncol = pdata.getColonna().getColIndex();
    return dati[ncol] == null;
  }

  /**
   * Aggiunge la colonna dati {@link DtsData} nel array di riga utilizzando
   * l'indice {@link DtsCol#getColIndex()} di {@link DtsData#getColonna()}
   *
   * @param pdata
   */
  public void addData(DtsData pdata) {
    if (dati == null)
      dati = new DtsData[dataset.getColonne().size()];
    int k = pdata.getColonna().getColIndex();
    if (dati[k] != null)
      s_log.error("Doppia registrazione:{} ==> {}", pdata.toString(), dati[k].toString());
    else
      dati[k] = pdata;
  }

  @Override
  public String toString() {
    String sz = "";
    if (dati == null)
      return sz;
    int    k    = 0;
    String virg = "";
    for (DtsData dt : dati) {
      String l = String.format("%s(%d)%s", virg, k++, dt == null ? "" : dt.toString());
      virg = s_next;
      sz += l;
    }
    return sz;
  }

  public Object getValue(String p_campo) {
    if (dati == null)
      return null;
    DtsCol col = dataset.getColonna(p_campo);
    int    k   = col.getColIndex();
    if (dati.length < k) {
      // System.err.printf("Non esiste la colonna %s index %d\n", p_campo, k);
      s_log.error("Non esiste la colonna {} index {}", p_campo, k);
      return null;
    }
    DtsData dato = dati[k];
    if (dato == null)
      return null;
    return dato.getDato();
  }

  public Dataset getDataset() {
    return this.dataset;
  }

  public void setDataset(final Dataset dataset) {
    this.dataset = dataset;
  }

  public DtsData[] getDati() {
    return this.dati;
  }

  public void setDati(final DtsData[] dati) {
    this.dati = dati;
  }
}
